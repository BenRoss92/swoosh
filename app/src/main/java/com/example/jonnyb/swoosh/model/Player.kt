package com.example.jonnyb.swoosh.model

import android.os.Parcel
import android.os.Parcelable

// Make the Player a "Parcelable" so that instances of Player (containing the skill and league data) can be sent and received by activities. The data must be serialised in one activity before being sent to another activity. The data can then be deserialised and read in the receiving activity. This is what Parcelable does for us.

// The implementation of this class was auto-generated by Android Studio. This was done by writing the following:
//
// class Player(var skill: String, var league: String): Parcelable
//
// Then put the text cursor on the generated IDE error and prompt the quick action to 'add Parcelable implementation' (ALT + ENTER):
class Player(var skill: String, var league: String): Parcelable {
    constructor(parcel: Parcel) : this(
            parcel.readString(),
            parcel.readString())

    override fun writeToParcel(parcel: Parcel, flags: Int) {
        parcel.writeString(skill)
        parcel.writeString(league)
    }

    override fun describeContents(): Int {
        return 0
    }

    companion object CREATOR : Parcelable.Creator<Player> {
        override fun createFromParcel(parcel: Parcel): Player {
            return Player(parcel)
        }

        override fun newArray(size: Int): Array<Player?> {
            return arrayOfNulls(size)
        }
    }
}